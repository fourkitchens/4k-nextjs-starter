/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'DateTime': { kind: 'OBJECT'; name: 'DateTime'; fields: { 'offset': { name: 'offset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UtcOffset'; ofType: null; }; } }; 'time': { name: 'time'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Timestamp'; ofType: null; }; } }; 'timezone': { name: 'timezone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TimeZone'; ofType: null; }; } }; }; };
    'Email': unknown;
    'File': { kind: 'OBJECT'; name: 'File'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mime': { name: 'mime'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Html': unknown;
    'ID': unknown;
    'Image': { kind: 'OBJECT'; name: 'Image'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'height': { name: 'height'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'mime': { name: 'mime'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'width': { name: 'width'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'Int': unknown;
    'KeyValueInput': { kind: 'INPUT_OBJECT'; name: 'KeyValueInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'Language': { kind: 'OBJECT'; name: 'Language'; fields: { 'direction': { name: 'direction'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Link': { kind: 'OBJECT'; name: 'Link'; fields: { 'internal': { name: 'internal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MediaFile': { kind: 'OBJECT'; name: 'MediaFile'; fields: { 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'OBJECT'; name: 'Text'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'mediaFile': { name: 'mediaFile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'File'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TermMediaTags'; ofType: null; }; }; } }; }; };
    'MediaImage': { kind: 'OBJECT'; name: 'MediaImage'; fields: { 'caption': { name: 'caption'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'copyright': { name: 'copyright'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'OBJECT'; name: 'Text'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'mediaImage': { name: 'mediaImage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Image'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TermMediaTags'; ofType: null; }; }; } }; }; };
    'MediaInterface': { kind: 'INTERFACE'; name: 'MediaInterface'; fields: { 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; possibleTypes: 'MediaFile' | 'MediaImage' | 'MediaVideo'; };
    'MediaUnion': { kind: 'UNION'; name: 'MediaUnion'; fields: {}; possibleTypes: 'MediaFile' | 'MediaImage' | 'MediaVideo'; };
    'MediaVideo': { kind: 'OBJECT'; name: 'MediaVideo'; fields: { 'caption': { name: 'caption'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'copyright': { name: 'copyright'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'OBJECT'; name: 'Text'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'mediaOembedVideo': { name: 'mediaOembedVideo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TermMediaTags'; ofType: null; }; }; } }; 'transcript': { name: 'transcript'; type: { kind: 'OBJECT'; name: 'Link'; ofType: null; } }; }; };
    'Menu': { kind: 'OBJECT'; name: 'Menu'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MenuAvailable': { name: 'MenuAvailable'; enumValues: 'MAIN'; };
    'MenuInterface': { kind: 'INTERFACE'; name: 'MenuInterface'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'Menu'; };
    'MenuItem': { kind: 'OBJECT'; name: 'MenuItem'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItemAttributes'; ofType: null; }; } }; 'children': { name: 'children'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expanded': { name: 'expanded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internal': { name: 'internal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'route': { name: 'route'; type: { kind: 'UNION'; name: 'RouteUnion'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuItemAttributes': { kind: 'OBJECT'; name: 'MenuItemAttributes'; fields: { 'class': { name: 'class'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuUnion': { kind: 'UNION'; name: 'MenuUnion'; fields: {}; possibleTypes: 'Menu'; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { '_': { name: '_'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'NodeInterface': { kind: 'INTERFACE'; name: 'NodeInterface'; fields: { 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'promote': { name: 'promote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sticky': { name: 'sticky'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'NodePage'; };
    'NodePage': { kind: 'OBJECT'; name: 'NodePage'; fields: { 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'NodePageContentUnion'; ofType: null; }; }; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'promote': { name: 'promote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sticky': { name: 'sticky'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'teaserMedia': { name: 'teaserMedia'; type: { kind: 'OBJECT'; name: 'MediaImage'; ofType: null; } }; 'teaserText': { name: 'teaserText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'text': { name: 'text'; type: { kind: 'OBJECT'; name: 'Text'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'NodePageContentUnion': { kind: 'UNION'; name: 'NodePageContentUnion'; fields: {}; possibleTypes: 'ParagraphImage' | 'ParagraphText' | 'ParagraphTextWithMedia' | 'ParagraphVideo'; };
    'NodeUnion': { kind: 'UNION'; name: 'NodeUnion'; fields: {}; possibleTypes: 'NodePage'; };
    'ParagraphImage': { kind: 'OBJECT'; name: 'ParagraphImage'; fields: { 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaImage'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ParagraphInterface': { kind: 'INTERFACE'; name: 'ParagraphInterface'; fields: { 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; possibleTypes: 'ParagraphImage' | 'ParagraphText' | 'ParagraphTextWithMedia' | 'ParagraphVideo'; };
    'ParagraphText': { kind: 'OBJECT'; name: 'ParagraphText'; fields: { 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'text': { name: 'text'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Text'; ofType: null; }; } }; }; };
    'ParagraphTextWithMedia': { kind: 'OBJECT'; name: 'ParagraphTextWithMedia'; fields: { 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'media': { name: 'media'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'ParagraphTextWithMediaMediaUnion'; ofType: null; }; } }; 'mediaAlignment': { name: 'mediaAlignment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'text': { name: 'text'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Text'; ofType: null; }; } }; }; };
    'ParagraphTextWithMediaMediaUnion': { kind: 'UNION'; name: 'ParagraphTextWithMediaMediaUnion'; fields: {}; possibleTypes: 'MediaImage' | 'MediaVideo'; };
    'ParagraphUnion': { kind: 'UNION'; name: 'ParagraphUnion'; fields: {}; possibleTypes: 'ParagraphImage' | 'ParagraphText' | 'ParagraphTextWithMedia' | 'ParagraphVideo'; };
    'ParagraphVideo': { kind: 'OBJECT'; name: 'ParagraphVideo'; fields: { 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'video': { name: 'video'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MediaVideo'; ofType: null; }; } }; }; };
    'PhoneNumber': unknown;
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'info': { name: 'info'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SchemaInformation'; ofType: null; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'route': { name: 'route'; type: { kind: 'UNION'; name: 'RouteUnion'; ofType: null; } }; }; };
    'Route': { kind: 'INTERFACE'; name: 'Route'; fields: { 'internal': { name: 'internal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'RouteExternal' | 'RouteInternal'; };
    'RouteEntityUnion': { kind: 'UNION'; name: 'RouteEntityUnion'; fields: {}; possibleTypes: 'NodePage'; };
    'RouteExternal': { kind: 'OBJECT'; name: 'RouteExternal'; fields: { 'internal': { name: 'internal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RouteInternal': { kind: 'OBJECT'; name: 'RouteInternal'; fields: { 'breadcrumbs': { name: 'breadcrumbs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Link'; ofType: null; }; }; } }; 'entity': { name: 'entity'; type: { kind: 'UNION'; name: 'RouteEntityUnion'; ofType: null; } }; 'internal': { name: 'internal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RouteUnion': { kind: 'UNION'; name: 'RouteUnion'; fields: {}; possibleTypes: 'RouteExternal' | 'RouteInternal'; };
    'SchemaFragment': { kind: 'OBJECT'; name: 'SchemaFragment'; fields: { 'class': { name: 'class'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SchemaInformation': { kind: 'OBJECT'; name: 'SchemaInformation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fragments': { name: 'fragments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SchemaFragment'; ofType: null; }; }; }; } }; 'home': { name: 'home'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SortDirection': { name: 'SortDirection'; enumValues: 'ASC' | 'DESC'; };
    'String': unknown;
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { '_': { name: '_'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'TermInterface': { kind: 'INTERFACE'; name: 'TermInterface'; fields: { 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Text'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'UNION'; name: 'TermUnion'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; possibleTypes: 'TermMediaTags'; };
    'TermMediaTags': { kind: 'OBJECT'; name: 'TermMediaTags'; fields: { 'changed': { name: 'changed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Text'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'langcode': { name: 'langcode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Language'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'UNION'; name: 'TermUnion'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'TermUnion': { kind: 'UNION'; name: 'TermUnion'; fields: {}; possibleTypes: 'TermMediaTags'; };
    'Text': { kind: 'OBJECT'; name: 'Text'; fields: { 'format': { name: 'format'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'processed': { name: 'processed'; type: { kind: 'SCALAR'; name: 'Html'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TextSummary': { kind: 'OBJECT'; name: 'TextSummary'; fields: { 'format': { name: 'format'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'processed': { name: 'processed'; type: { kind: 'SCALAR'; name: 'Html'; ofType: null; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'Html'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Time': unknown;
    'TimeZone': unknown;
    'Timestamp': unknown;
    'UnsupportedType': { kind: 'OBJECT'; name: 'UnsupportedType'; fields: { 'unsupported': { name: 'unsupported'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'UntypedStructuredData': unknown;
    'UtcOffset': unknown;
    'View': { kind: 'INTERFACE'; name: 'View'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'display': { name: 'display'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'langcode': { name: 'langcode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ViewPageInfo'; ofType: null; }; } }; 'view': { name: 'view'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: never; };
    'ViewFilter': { kind: 'OBJECT'; name: 'ViewFilter'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UntypedStructuredData'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'multiple': { name: 'multiple'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'options': { name: 'options'; type: { kind: 'SCALAR'; name: 'UntypedStructuredData'; ofType: null; } }; 'plugin': { name: 'plugin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'required': { name: 'required'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'UntypedStructuredData'; ofType: null; } }; }; };
    'ViewPageInfo': { kind: 'OBJECT'; name: 'ViewPageInfo'; fields: { 'offset': { name: 'offset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'page': { name: 'page'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'pageSize': { name: 'pageSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ViewReference': { kind: 'OBJECT'; name: 'ViewReference'; fields: { 'contextualFilter': { name: 'contextualFilter'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'display': { name: 'display'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pageSize': { name: 'pageSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'view': { name: 'view'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ViewResultUnion': { kind: 'UNION'; name: 'ViewResultUnion'; fields: {}; possibleTypes: 'UnsupportedType'; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: 'Subscription';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}